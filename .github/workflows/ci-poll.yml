name: dummy
on:
  workflow_dispatch:
  push:
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
#   # This item has no matching transformer
#   MONGO_DB_CREDS:
#   # This item has no matching transformer
  MONGO_USERNAME: superuser
#   # This item has no matching transformer
  MONGO_PASSWORD: SuperPassword
jobs:
  Installing_Dependencies:
    name: Installing Dependencies
    runs-on:
      - ubuntu-latest
    container:
      image: node:18-alpine
#       # This item has no matching transformer
#       docker:
#         key: args
#         value:
#           isLiteral: true
#           value: "-u root:root"
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
  Dependency_Scanning_NPM_Dependency_Audit:
    name: Dependency Scanning-NPM Dependency Audit
    runs-on:
      - ubuntu-latest
    needs: Installing_Dependencies
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
  Unit_Testing:
    name: Unit Testing
    runs-on:
      - ubuntu-latest
    container:
      image: node:18-alpine
#       # This item has no matching transformer
#       docker:
#         key: args
#         value:
#           isLiteral: true
#           value: "-u root:root"
    needs:
    - Dependency_Scanning_NPM_Dependency_Audit
    steps:
    - uses: nick-fields/retry@v3
      with:
        timeout_seconds: 60
        max_attempts: 2
        retry_on: error
        command: npm test
    - name: checkout
      uses: actions/checkout@v4.1.0
    - run: npm i --no-audit
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2.12.0
      if: always()
      with:
        junit_files: test-results.xml
  Code_Coverage:
    name: Code Coverage
    runs-on:
      - ubuntu-latest
    container:
      image: node:18-alpine
#       # This item has no matching transformer
#       docker:
#         key: args
#         value:
#           isLiteral: true
#           value: "-u root:root"
    needs: Unit_Testing
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - run: npm install --no-audit
    - continue-on-error: true
      run: npm run coverage
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.1.0
      with:
        if-no-files-found: ignore
        name: Code Coverage HTML Report
        path: coverage/lcov-report
  Build_Docker_Image:
    name: Build Docker Image
    runs-on:
      - ubuntu-latest
    needs: Code_Coverage
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
  Trivy_Vulnerability_Scanner:
    name: Trivy Vulnerability Scanner
    runs-on:
      - ubuntu-latest
    needs: Build_Docker_Image
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Trivy Security Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{ vars.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ github.sha }}"
        severity: CRITICAL
        format: json
        output: trivy-image-CRITICAL-results.json
        exit-code: '1'
        quiet: 'true'
        ignore-unfixed: 'false'
    - name: Upload Scan Report
      uses: actions/upload-artifact@v4
      with:
        name: trivy-image-CRITICAL-results
        path: trivy-image-CRITICAL-results.json
        retention-days: 30
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.1.0
      with:
        if-no-files-found: ignore
        name: Trivy Image Critical Vul Report
        path: "."
  Push_Docker_Image:
    name: Push Docker Image
    runs-on:
      - ubuntu-latest
    needs: Trivy_Vulnerability_Scanner
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: "${{ vars.DOCKERHUB_USERNAME }}"
        password: "${{ secrets.DOCKERHUB_TOKEN }}"
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: "${{ vars.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME  }}:${{ github.sha }}"
  Post-Build:
    if: always()
    name: Post Build
    runs-on:
      - ubuntu-latest
    needs:
    - Installing_Dependencies
    - Dependency_Scanning_NPM_Dependency_Audit
    - Unit_Testing
    - Code_Coverage
    - Build_Docker_Image
    - Trivy_Vulnerability_Scanner
    - Push_Docker_Image
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
