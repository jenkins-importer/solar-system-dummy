name: ci-pipeline-poll-scm
on:
  workflow_dispatch:
    
  push:
    branches:
    - branch-b
    - convert-ci-pipeline-poll-scm-to-actions-20250425-060602
  schedule:
  - cron: 00 00 * * *
  
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
#   # This item has no matching transformer
#   MONGO_DB_CREDS:
#   # This item has no matching transformer
#   MONGO_USERNAME:
#   # This item has no matching transformer
#   MONGO_PASSWORD:
jobs:
  Installing_Dependencies:
    name: Installing Dependencies
    runs-on:
      - ubuntu-latest
    container:
      image: node:18-alpine
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: sh
      run: npm install --no-audit
  Dependency_Scanning_NPM_Dependency_Audit:
    name: Dependency Scanning-NPM Dependency Audit
    runs-on:
      - ubuntu-latest
    container:
      image: node:18-alpine
#       # This item has no matching transformer
#       docker:
#         key: args
#         value:
#           isLiteral: true
#           value: "-u root:root"
    needs: Installing_Dependencies
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: sh
      shell: bash
      run: |-
        npm audit --audit-level=critical
        echo $?
  Dependency_Scanning_OWASP_Dependency_Check:
    name: Dependency Scanning-OWASP Dependency Check
    runs-on:
      - ubuntu-latest
    needs: Installing_Dependencies
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
#     # This item has no matching transformer
#     - dependencyCheck:
#       - key: additionalArguments
#         value:
#           isLiteral: true
#           value: "\n                            --scan './' \n                            --out './'  \n                            --format 'ALL' \n                            --disableYarnAudit                             --prettyPrint"
#       - key: odcInstallation
#         value:
#           isLiteral: true
#           value: OWASP-DepCheck-10
#     # This item has no matching transformer
#     - dependencyCheckPublisher:
#       - key: failedTotalCritical
#         value:
#           isLiteral: true
#           value: 1
#       - key: pattern
#         value:
#           isLiteral: true
#           value: dependency-check-report.xml
#       - key: stopBuild
#         value:
#           isLiteral: true
#           value: true
  Unit_Testing:
    name: Unit Testing
    runs-on:
      - ubuntu-latest
    container:
      image: node:18-alpine
#       # This item has no matching transformer
#       docker:
#         key: args
#         value:
#           isLiteral: true
#           value: "-u root:root"
    needs:
    - Dependency_Scanning_NPM_Dependency_Audit
    - Dependency_Scanning_OWASP_Dependency_Check
    steps:
#     # This item has no matching transformer
#     - retry:
#         name: retry
#         arguments:
#         - isLiteral: true
#           value: 2
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: sh
      shell: bash
      run: npm test
  Code_Coverage:
    name: Code Coverage
    runs-on:
      - ubuntu-latest
    container:
      image: node:18-alpine
#       # This item has no matching transformer
#       docker:
#         key: args
#         value:
#           isLiteral: true
#           value: "-u root:root"
    needs: Unit_Testing
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
#     # This item has no matching transformer
#     - catchError:
#       - key: buildResult
#         value:
#           isLiteral: true
#           value: SUCCESS
#       - key: message
#         value:
#           isLiteral: true
#           value: Oops! it will be fixed in future releases
#       - key: stageResult
#         value:
#           isLiteral: true
#           value: UNSTABLE
  Build_Docker_Image:
    name: Build Docker Image
    runs-on:
      - ubuntu-latest
    needs: Code_Coverage
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: sh
      shell: bash
      run: docker build -t siddharth67/solar-system:$GIT_COMMIT .
  Trivy_Vulnerability_Scanner:
    name: Trivy Vulnerability Scanner
    runs-on:
      - ubuntu-latest
    needs: Build_Docker_Image
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: sh
      shell: bash
      run: |-
        trivy image siddharth67/solar-system:$GIT_COMMIT                         --severity LOW,MEDIUM,HIGH                         --exit-code 0                         --quiet                         --format json -o trivy-image-MEDIUM-results.json
        trivy image siddharth67/solar-system:$GIT_COMMIT                         --severity CRITICAL                         --exit-code 1                         --quiet                         --format json -o trivy-image-CRITICAL-results.json
    - name: sh
      shell: bash
      run: |-
        trivy convert                             --format template --template "@/usr/local/share/trivy/templates/html.tpl"                             --output trivy-image-MEDIUM-results.html trivy-image-MEDIUM-results.json
        trivy convert                             --format template --template "@/usr/local/share/trivy/templates/html.tpl"                             --output trivy-image-CRITICAL-results.html trivy-image-CRITICAL-results.json
        trivy convert                             --format template --template "@/usr/local/share/trivy/templates/junit.tpl"                             --output trivy-image-MEDIUM-results.xml  trivy-image-MEDIUM-results.json
        trivy convert                             --format template --template "@/usr/local/share/trivy/templates/junit.tpl"                             --output trivy-image-CRITICAL-results.xml trivy-image-CRITICAL-results.json
      if: always()
  Push_Docker_Image:
    name: Push Docker Image
    runs-on:
      - ubuntu-latest
    needs: Trivy_Vulnerability_Scanner
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
#     # This item has no matching transformer
#     - withDockerRegistry:
#       - key: credentialsId
#         value:
#           isLiteral: true
#           value: docker-hub-credentials
#       - key: url
#         value:
#           isLiteral: true
#           value: ''
  Post-Build:
    if: always()
    name: Post Build
    runs-on:
      - ubuntu-latest
    needs:
    - Installing_Dependencies
    - Dependency_Scanning_NPM_Dependency_Audit
    - Dependency_Scanning_OWASP_Dependency_Check
    - Unit_Testing
    - Code_Coverage
    - Build_Docker_Image
    - Trivy_Vulnerability_Scanner
    - Push_Docker_Image
    steps:
#     # 'script' was not transformed because there is no suitable equivalent in GitHub Actions
#     - name: script
#       arguments:
#       - key: scriptBlock
#         value:
#           isLiteral: true
#           value: |-
#             if (fileExists('solar-system-gitops-argocd')) {
#                                 sh 'rm -rf solar-system-gitops-argocd'
#                             }
#       if: always()
    - uses: actions/upload-artifact@v3
      with:
        name: junit-artifact
        path: test-results.xml
      if: always()
    - uses: actions/upload-artifact@v3
      with:
        name: junit-artifact
        path: dependency-check-junit.xml
      if: always()
    - uses: actions/upload-artifact@v3
      with:
        name: junit-artifact
        path: trivy-image-CRITICAL-results.xml
      if: always()
    - uses: actions/upload-artifact@v3
      with:
        name: junit-artifact
        path: trivy-image-MEDIUM-results.xml
      if: always()
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.1.0
      with:
        if-no-files-found: ignore
        name: DAST - OWASP ZAP Report
        path: "."
      if: always()
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.1.0
      with:
        if-no-files-found: ignore
        name: Trivy Image Critical Vul Report
        path: "."
      if: always()
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.1.0
      with:
        if-no-files-found: ignore
        name: Trivy Image Medium Vul Report
        path: "."
      if: always()
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.1.0
      with:
        if-no-files-found: ignore
        name: Dependency Check HTML Report
        path: "."
      if: always()
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.1.0
      with:
        if-no-files-found: ignore
        name: Code Coverage HTML Report
        path: coverage/lcov-report
      if: always()
